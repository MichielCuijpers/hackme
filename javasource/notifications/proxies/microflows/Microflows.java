// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package notifications.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the Notifications module
	public static void approveRequest(IContext context, timesheet.proxies.Submission _submission)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Submission", _submission == null ? null : _submission.getMendixObject());
		Core.microflowCall("Notifications.ApproveRequest").withParams(params).execute(context);
	}
	public static notifications.proxies.Notification createNotificationForUser(IContext context, java.lang.String _message, timesheet.proxies.MendixSSOUser _to, timesheet.proxies.MendixSSOUser _from, java.lang.String _title, java.lang.Long _associatedObjectID)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Message", _message);
		params.put("To", _to == null ? null : _to.getMendixObject());
		params.put("From", _from == null ? null : _from.getMendixObject());
		params.put("Title", _title);
		params.put("AssociatedObjectID", _associatedObjectID);
		IMendixObject result = (IMendixObject)Core.microflowCall("Notifications.CreateNotificationForUser").withParams(params).execute(context);
		return result == null ? null : notifications.proxies.Notification.initialize(context, result);
	}
	public static boolean markAsRead(IContext context, notifications.proxies.Notification _notification)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Notification", _notification == null ? null : _notification.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Notifications.MarkAsRead").withParams(params).execute(context);
	}
	public static java.util.List<notifications.proxies.PopupMessage> retrieveUserNotifications(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("Notifications.RetrieveUserNotifications").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> notifications.proxies.PopupMessage.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
}
